#!/usr/bin/python3
"""memorize-flashcards-konsole-client
Usage:
    memorize-flashcards-konsole-client <coursename> <num-cards>
"""
import sys
import signal
from memorize_flashcards.policy import ClassicPolicy as Policy
from docopt import docopt

arguments = docopt(__doc__)

coursename = arguments['<coursename>']
try:
	numcards = int(arguments['<num-cards>'])
except ValueError:
	print('E: "num-cards" should be integer', file=sys.stderr)
	sys.exit(1)

try:
	policy = Policy(coursename)
except Exception as e:
	print(e, file=sys.stderr)
	sys.exit(1)

def cleanup(signum, frame):
	policy.write_changes()
	exitstatus = 1 if signum else 0
	sys.exit(exitstatus)

signal.signal(signal.SIGINT, cleanup)

def gen_cards(policy, numcards=0):
	i = 0
	while True:
		yield policy.fetch_card()
		i += 1
		if i == numcards: # numcards == 0 would generate cards infinately
			break

for card in gen_cards(policy, numcards):
	print("----------------------- {}".format(card.hash_))
	print(card.get_printable('Q'))
	_ = input('')
	print(card.get_printable('A'))
	yn = ''
	while (yn.lower() != 'y') and (yn.lower() != 'n'):
		yn = input('Did you know the answer? [y/n]')
	policy.update_card(card, True if yn.lower() == 'y' else False)

cleanup(None, None)
